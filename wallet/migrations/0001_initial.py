# Generated by Django 3.1.2 on 2020-10-11 15:30

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255, verbose_name='Account Key 주소')),
                ('pub', models.CharField(max_length=255, verbose_name='Key의 Public Key')),
                ('keyFile', models.CharField(max_length=255, verbose_name='마스터지갑 비밀번호로 암호화된 Private Key')),
            ],
        ),
        migrations.CreateModel(
            name='Coin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='암호화폐 이름')),
                ('symbol', models.CharField(max_length=255, verbose_name='암호화폐 기호')),
                ('address', models.CharField(max_length=255, verbose_name='암호화폐 주소')),
                ('desc', models.CharField(max_length=255, verbose_name='암호화폐 설명')),
                ('blockchain', models.CharField(max_length=255, verbose_name='암호화폐가 발행된 블록체인 플랫폼')),
                ('attributes', models.CharField(max_length=255, verbose_name='암호화폐의 메타 데이터')),
            ],
        ),
        migrations.CreateModel(
            name='HenesisKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255, verbose_name='Henesis Key 주소')),
            ],
        ),
        migrations.CreateModel(
            name='MasterWallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('masterWalletId', models.CharField(max_length=255, verbose_name='마스터지갑 ID')),
                ('name', models.CharField(max_length=255, verbose_name='지갑 이름')),
                ('address', models.CharField(max_length=255, verbose_name='지갑 주소')),
                ('blockchain', models.CharField(max_length=255, verbose_name='블록체인 타입')),
                ('createdAt', models.CharField(max_length=255, verbose_name='지갑 생성 시간(ms)')),
                ('updatedAt', models.CharField(max_length=255, verbose_name='지갑 정보 수정 시간(ms)')),
                ('status', models.CharField(max_length=255, verbose_name='지갑 상태')),
                ('error', models.CharField(max_length=255, verbose_name='지갑 생설 실패 시 발생 에러')),
                ('encryptionKey', models.CharField(max_length=255, verbose_name='암호 키')),
                ('whitelistActivated', models.BooleanField(verbose_name='출금 주소 화이트리스팅 활성화 유무')),
                ('version', models.CharField(max_length=255, verbose_name='컨트렉트 버전')),
                ('accountKeyId', models.ForeignKey(db_column='accountKeyId', on_delete=django.db.models.deletion.CASCADE, to='wallet.accountkey', verbose_name='Henesis Wallet의 Account Key')),
            ],
            options={
                'verbose_name': 'master wallet',
                'verbose_name_plural': 'master wallets',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='MultiSigPayload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=255, verbose_name='암호화폐의 양')),
                ('walletAddress', models.CharField(max_length=255, verbose_name='트랜잭션을 발생시킬 지갑의 주소')),
                ('toAddress', models.CharField(max_length=255, verbose_name='트랜잭션의 수신자')),
                ('walletNonce', models.CharField(max_length=255, verbose_name='트랜잭션을 발생시킬 지갑의 nonce')),
                ('hexData', models.CharField(max_length=255, verbose_name='트랜잭션에 담긴 데이터')),
            ],
        ),
        migrations.CreateModel(
            name='RawTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nonce', models.CharField(max_length=255, verbose_name='트랜잭션 발신의 nonce')),
                ('to', models.CharField(max_length=255, verbose_name='트랜잭션 수신자')),
                ('value', models.CharField(max_length=255, verbose_name='트랜잭션에 담긴 암호화폐의 양')),
                ('data', models.CharField(max_length=255, verbose_name='트래잭션에 담긴 데이터')),
                ('gasPrice', models.CharField(max_length=255, verbose_name='트랜잭션의 gas price(단위:wei')),
                ('gasLimit', models.CharField(max_length=255, verbose_name='트랜잭션의 gas limit(단위:wei)')),
            ],
        ),
        migrations.CreateModel(
            name='SignedMultiSigPayload',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('signature', models.CharField(max_length=255, verbose_name='서명한 트랜잭션 Payload')),
                ('multiSigPayloadId', models.ForeignKey(db_column='multiSigPayloadId', on_delete=django.db.models.deletion.CASCADE, to='wallet.multisigpayload', verbose_name='Account Key로 서명한 트랜잭션 Payload')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transactionId', models.CharField(max_length=255, verbose_name='트렌잭션 ID')),
                ('blockchain', models.CharField(max_length=255, verbose_name='블록체인 플랫폼')),
                ('sender', models.CharField(max_length=255, verbose_name='Henesis Key의 주소')),
                ('hash', models.CharField(max_length=255, verbose_name='트랜잭션 해시')),
                ('error', models.CharField(max_length=255, verbose_name='트랜잭션 전송 시 발생한 에러')),
                ('status', models.CharField(max_length=255, verbose_name='트래잭션 상태')),
                ('createdAt', models.CharField(max_length=255, verbose_name='트랜잭션 생성 시간(ms)')),
                ('updatedAt', models.CharField(max_length=255, verbose_name='트랜잭션 변경 시간(ms)')),
                ('keyId', models.ForeignKey(db_column='keyId', on_delete=django.db.models.deletion.CASCADE, to='wallet.henesiskey', verbose_name='Henesis Key의 ID')),
                ('rawTransactionId', models.ForeignKey(db_column='rawTransactionId', on_delete=django.db.models.deletion.CASCADE, to='wallet.rawtransaction', verbose_name='블록체인에 전파된 트랜잭션')),
                ('signedMultiSigPayloadId', models.ForeignKey(db_column='signedMultiSigPayloadId', on_delete=django.db.models.deletion.CASCADE, to='wallet.signedmultisigpayload', verbose_name='Account Key로 서명한 트랜잭션 Payload')),
            ],
        ),
        migrations.CreateModel(
            name='UserWallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userWalletId', models.CharField(max_length=255, verbose_name='사용자지갑 ID')),
                ('name', models.CharField(max_length=255, verbose_name='지갑 이름')),
                ('address', models.CharField(max_length=255, verbose_name='지갑 주소')),
                ('blockchain', models.CharField(max_length=255, verbose_name='블록체인 타입')),
                ('status', models.CharField(max_length=255, verbose_name='지갑 상태')),
                ('error', models.CharField(max_length=255, null=True, verbose_name='지갑 생설 실패 시 발생 에러')),
                ('createdAt', models.DateTimeField(auto_now_add=True, verbose_name='지갑 생성 시간(ms)')),
                ('updatedAt', models.DateTimeField(auto_now=True, verbose_name='지갑 정보 수정 시간(ms)')),
                ('masterWalletId', models.ForeignKey(db_column='masterWalletId', on_delete=django.db.models.deletion.CASCADE, to='wallet.masterwallet', verbose_name='마스터 지갑의 ID')),
                ('transcationId', models.ForeignKey(db_column='transactionId', on_delete=django.db.models.deletion.CASCADE, to='wallet.transaction', verbose_name='지갑 생성 트랜잭션의 ID')),
            ],
            options={
                'verbose_name': 'user wallet',
                'verbose_name_plural': 'user wallets',
                'ordering': ['-createdAt'],
            },
        ),
        migrations.CreateModel(
            name='ValueTransferEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fromAddr', models.CharField(max_length=255, verbose_name='출금 주소')),
                ('toAddr', models.CharField(max_length=255, verbose_name='입금 주소')),
                ('amount', models.CharField(max_length=255, verbose_name='암호화폐 양')),
                ('status', models.CharField(max_length=255, verbose_name='트랜잭션 상태')),
                ('orgId', models.CharField(max_length=255, verbose_name='지갑이 속한 팀 ID')),
                ('coinSymbol', models.CharField(max_length=255, verbose_name='암호화폐 기호')),
                ('transferType', models.CharField(max_length=255, verbose_name='입출금 타입')),
                ('confirmation', models.CharField(max_length=255, verbose_name='블록 컨펌 수')),
                ('transactionHash', models.CharField(max_length=255, verbose_name='트랜잭션 해시')),
                ('createdAt', models.CharField(max_length=255, verbose_name='트랜잭션 생성 시간(ms)')),
                ('updatedAt', models.CharField(max_length=255, verbose_name='트랜잭션 변경 시간(ms)')),
                ('walletName', models.CharField(max_length=255, verbose_name='해당 내역의 지갑 이름')),
                ('walletType', models.CharField(max_length=255, verbose_name='해당 내역의 지갑 종류')),
                ('masterWalletId', models.ForeignKey(db_column='masterWalletId', on_delete=django.db.models.deletion.CASCADE, to='wallet.masterwallet', verbose_name='마스터 지갑의 ID')),
                ('transcationId', models.ForeignKey(db_column='transactionId', on_delete=django.db.models.deletion.CASCADE, to='wallet.transaction', verbose_name='지갑 생성 트랜잭션의 ID')),
                ('walletId', models.ForeignKey(db_column='userWalletId', on_delete=django.db.models.deletion.CASCADE, to='wallet.userwallet', verbose_name='사용자 지갑의 ID')),
            ],
        ),
        migrations.CreateModel(
            name='Nonce',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nonce', models.CharField(max_length=255)),
                ('masterWalletId', models.ForeignKey(db_column='masterWalletId', on_delete=django.db.models.deletion.CASCADE, to='wallet.masterwallet', verbose_name='마스터 지갑의 ID')),
                ('userWalletId', models.ForeignKey(db_column='userWalletId', on_delete=django.db.models.deletion.CASCADE, to='wallet.userwallet', verbose_name='사용자 지갑의 ID')),
            ],
        ),
        migrations.AddField(
            model_name='masterwallet',
            name='transcationId',
            field=models.ForeignKey(db_column='transactionId', on_delete=django.db.models.deletion.CASCADE, to='wallet.transaction', verbose_name='지갑 생성 트랜잭션의 ID'),
        ),
        migrations.CreateModel(
            name='CallEvents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=255, verbose_name='트랜잭션 상태')),
                ('orgId', models.CharField(max_length=255, verbose_name='지갑이 속한 팀 ID')),
                ('toAddress', models.CharField(max_length=255, verbose_name='호출한 스마트 컨트랙트 주소')),
                ('confirmation', models.CharField(max_length=255, verbose_name='블록 컨펌 수')),
                ('transactionHash', models.CharField(max_length=255, verbose_name='트랜잭션 해시')),
                ('createdAt', models.CharField(max_length=255, verbose_name='트랜잭션 생성 시간(ms)')),
                ('updatedAt', models.CharField(max_length=255, verbose_name='트랜잭션 변경 시간(ms)')),
                ('masterWalletId', models.ForeignKey(db_column='masterWalletId', on_delete=django.db.models.deletion.CASCADE, to='wallet.masterwallet', verbose_name='마스터 지갑의 ID')),
                ('transcationId', models.ForeignKey(db_column='transactionId', on_delete=django.db.models.deletion.CASCADE, to='wallet.transaction', verbose_name='지갑 생성 트랜잭션의 ID')),
                ('walletId', models.ForeignKey(db_column='userWalletId', on_delete=django.db.models.deletion.CASCADE, to='wallet.userwallet', verbose_name='사용자 지갑의 ID')),
            ],
        ),
        migrations.CreateModel(
            name='Balance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.CharField(max_length=255, verbose_name='확정된 잔액 ')),
                ('spendableAmount', models.CharField(max_length=255, verbose_name='출금 가능한 잔액')),
                ('name', models.CharField(max_length=255, verbose_name='암호화폐 이름')),
                ('coinType', models.CharField(max_length=255, verbose_name='암호화폐 타입')),
                ('symbol', models.CharField(max_length=255, verbose_name='암호화폐 심볼, ticker')),
                ('coinId', models.ForeignKey(db_column='coinId', on_delete=django.db.models.deletion.CASCADE, to='wallet.coin', verbose_name='Coin의 ID')),
                ('masterWalletId', models.ForeignKey(db_column='masterWalletId', on_delete=django.db.models.deletion.CASCADE, to='wallet.masterwallet', verbose_name='마스터 지갑의 ID')),
                ('userWalletId', models.ForeignKey(db_column='userWalletId', on_delete=django.db.models.deletion.CASCADE, to='wallet.userwallet', verbose_name='사용자 지갑의 ID')),
            ],
        ),
    ]
